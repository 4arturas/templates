// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Template {
  id                               String                             @id @default(uuid())
  name                             String
  icon                             String
  subject                          String
  to                               String
  templateText                     String
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  OneTemplateHasManyCategories     OneTemplateHasManyCategories[]
  OneTemplateHasManyCategoryValues OneTemplateHasManyCategoryValues[]
}

model OneTemplateHasManyCategories {
  id         String   @id @default(uuid())
  template   Template @relation(fields: [templateId], references: [id])
  templateId String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id                               String                             @id @default(uuid())
  name                             String
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  OneTemplateHasManyCategories     OneTemplateHasManyCategories[]
  OneCategoryHasManyCategoryValues OneCategoryHasManyCategoryValues[]
}

model OneCategoryHasManyCategoryValues {
  id             String        @id @default(uuid())
  categoryId     String
  category       Category      @relation(fields: [categoryId], references: [id])
  categoryDataId String
  categoryData   CategoryValue @relation(fields: [categoryDataId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model CategoryValue {
  id                               String                             @id @default(uuid())
  name                             String
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  OneCategoryHasManyCategoryValues OneCategoryHasManyCategoryValues[]
  OneTemplateHasManyCategoryValues OneTemplateHasManyCategoryValues[]
}

model OneTemplateHasManyCategoryValues {
  id              String        @id @default(uuid())
  template        Template      @relation(fields: [templateId], references: [id])
  templateId      String
  categoryValueId String
  category        CategoryValue @relation(fields: [categoryValueId], references: [id])
}
